<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd

        ">

    <!--开启注解扫描-->
    <context:component-scan base-package="com.controller,com.dao,com.service,com.entity"/>

    <!--mybatis与spring进行整合-->
        <!--在此项目中采用纯配置文件的结构形式来使用mybatis-->

        <!--加载外部配置文件~连接数据库相关信息-->
        <context:property-placeholder location="classpath:druid.properties"/>
        <!--创建数据源连接数据库-->
            <!--通过设置外配置文件的形式-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
        </bean>
        <!--创建SqlSessionFactory对象-->
        <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <!--连接数据库的相关信息-->
            <property name="dataSource" ref="dataSource"/>
            <property name="configLocation" value="classpath:mybatis-config.xml"/>
            <!--扫描SQL对应的Mapper文件-->
            <property name="mapperLocations" value="classpath:mappers/*.xml"/>
        </bean>
        <!--创建SqlSession对象-->
        <bean id="SqlSession" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="sqlSessionFactoryBeanName" value="factory"/>
            <property name="basePackage" value="com.dao"/>
        </bean>



</beans>